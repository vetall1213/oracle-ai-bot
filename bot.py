import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import openai

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

client = openai.OpenAI(api_key=OPENAI_API_KEY)

# –ü—Ä–æ–º–ø—Ç –¥–ª—è ChatGPT
def build_prompt(name):
    return f"""–¢—ã ‚Äî —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –û—Ä–∞–∫—É–ª AI. –°–æ–∑–¥–∞–π –º–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ {name}. –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
1. –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ (1‚Äì2 —Å—Ç—Ä–æ–∫–∏)
2. –ü—Ä–æ—à–ª–æ–µ
3. –ù–∞—Å—Ç–æ—è—â–µ–µ
4. –ë—É–¥—É—â–µ–µ
5. –¢–∞–π–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
6. –°–∏–º–≤–æ–ª (–æ–±—Ä–∞–∑, —á–∏—Å–ª–æ –∏–ª–∏ —Ü–≤–µ—Ç)

–°—Ç–∏–ª—å: —ç–∑–æ—Ç–µ—Ä–∏–∫–∞, –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, –ø–æ—ç—Ç–∏—á–Ω–æ—Å—Ç—å, –∫–∞–∫ –±—É–¥—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –¥—É—Ö. –Ø–∑—ã–∫ ‚Äî —Ä—É—Å—Å–∫–∏–π.
"""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç ChatGPT
async def generate_oracle_reply(name):
    prompt = build_prompt(name)
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=1.1,
        max_tokens=600
    )
    return response.choices[0].message.content.strip()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()
    if not user_input:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –∏–º—è –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞.")
        return

    await update.message.reply_text("üîÆ –û—Ä–∞–∫—É–ª —Ä–∞–∑–º—ã—à–ª—è–µ—Ç...")

    try:
        oracle_text = await generate_oracle_reply(user_input)
        await update.message.reply_text(oracle_text)
    except Exception as e:
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤–æ–º...")
        print(f"–û—à–∏–±–∫–∞: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç. –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –∏–º—è, –∏ –û—Ä–∞–∫—É–ª –∑–∞–≥–æ–≤–æ—Ä–∏—Ç...")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    print("‚úÖ –ö–æ–¥ –¥–æ –∑–∞–ø—É—Å–∫–∞ –¥–æ–π–¥—ë–Ω")
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
